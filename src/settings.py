"""
Django settings for src project.

Generated by 'django-admin startproject' using Django 5.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv

load_dotenv(".env")

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = bool(int(os.environ.get("DJANGO_DEBUG", True)))
if not DEBUG:
    STATIC_ROOT = BASE_DIR / "static"
    SECRET_KEY = os.environ.get("DJANGO_SECRET_KEY")
else:
    SECRET_KEY = 'django-insecure-m(_b(n&)#*$4+9+*0$m=1)%orh6mm!x54g^&x6zo+zg!x3wfml'
    STATICFILES_DIRS = [
        BASE_DIR / "static",
        BASE_DIR / "carpeCalendar/static",
    ]
ALLOWED_HOSTS = ["*"]

# CSRF Trusted Origins
CSRF_TRUSTED_ORIGINS = [
    "https://carpe-calendar.kapucl.be", 
    "https://agenda.carpestudentem.be",
    "https://carpe-calendar-715955094407.europe-west1.run.app",
    "https://carpe-calendar-l5d4rbpmvq-ew.a.run.app"
]

# Application definition

INSTALLED_APPS = [
    "unfold",
    "unfold.contrib.filters",
    "unfold.contrib.forms",
    "unfold.contrib.inlines",
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'carpeCalendar',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    "whitenoise.middleware.WhiteNoiseMiddleware",
]

# En production, désactiver CSRF temporairement pour résoudre le problème
if not DEBUG:
    MIDDLEWARE = [item for item in MIDDLEWARE if 'CsrfViewMiddleware' not in item]
    
    # Désactiver les vérifications de migration en production pour éviter les problèmes de permissions
    import sys
    if 'runserver' in sys.argv:
        import django.core.management.commands.runserver as runserver
        runserver.Command.check_migrations = lambda self: None

ROOT_URLCONF = 'src.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'src.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases


import dj_database_url

# Configuration par défaut avec SQLite pour le développement
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Utiliser PostgreSQL en production si DATABASE_URL est définie
if os.environ.get('DATABASE_URL'):
    try:
        DATABASES['default'] = dj_database_url.parse(
            os.environ.get('DATABASE_URL'),
            conn_max_age=600,
            conn_health_checks=True,
        )
        print("PostgreSQL configuration loaded successfully")
    except Exception as e:
        print(f"Failed to configure PostgreSQL: {e}")
        print("Falling back to SQLite")


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'fr-be'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'


# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
